"""Cadeia de processamento para gerar uma descri√ß√£o de um animal"""

from langchain_core.prompts import ChatPromptTemplate
from models.data_structure import AnimalDescricao
from configurations.config import llm 
from langchain_core.runnables import RunnableLambda

# * Criar a cadeia de processamento
# * 1. Chain geradora
#   -- Criar um prompt que usa a vari√°vel {nome_animal}
nome_animal_prompt = ChatPromptTemplate.from_messages(
    [
        (
            "system",
            """Voc√™ √© um bi√≥logo especializado em criar descri√ß√µes de
         animais de forma educativa e envolvente.
         """,
        ),
        (
            "user",
            """Crie uma descri√ß√£o detalhada sobre o seguinte animal:
         {nome_animal}.

A descri√ß√£o deve ser bem estruturada, incluindo os seguintes t√≥picos:
- **Apar√™ncia F√≠sica:** (tamanho, peso, pelagem/plumagem, cores, etc.)
- **Habitat e Distribui√ß√£o Geogr√°fica:**
- **Dieta e H√°bitos Alimentares:**
- **Comportamento e Socializa√ß√£o:**
- **Curiosidades:** (um ou dois fatos interessantes)""",
        ),
    ]
)

chain_geradora_descricao = (
    nome_animal_prompt
    | llm.with_structured_output(AnimalDescricao)
)

#* --- 2. O Formatador de Sa√≠da: Deixa o resultado bonito ---
#* Uma fun√ß√£o simples que recebe o objeto Pydantic e retorna uma string amig√°vel.
def formatar_saida_amigavel(animal_obj: AnimalDescricao) -> str:
    """Recebe um objeto AnimalDescricao e retorna uma string formatada."""
    return (
        f"--- üêæ Informa√ß√µes sobre: {animal_obj.nome} ---\n"
        f"Descri√ß√£o: {animal_obj.descricao}\n"
        f"-----------------------------------"
    )

#* --- 3. A Pipeline Completa: Conecta todos os passos ---	
#* Esta √© a nossa esteira de produ√ß√£o. Ela define o fluxo do in√≠cio ao fim.
pipeline_completa = (
    #* Passo 1: Adaptar a entrada do usu√°rio.
    #* CORRE√á√ÉO: A lambda deve receber o dict de entrada {"animal": "..."}
    #* e transform√°-lo no dict que a chain_geradora_descricao espera: {"nome_animal": "..."}
    RunnableLambda(lambda entrada: {"nome_animal": entrada["animal"]})
    
    #* Passo 2. Executar a chain principal para obter a descri√ß√£o do aninal
    | chain_geradora_descricao

    #* Passo 3. Formatar a sa√≠da para uma string amig√°vel
    | RunnableLambda(formatar_saida_amigavel)
)
