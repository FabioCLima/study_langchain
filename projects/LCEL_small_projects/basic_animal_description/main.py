# main.py
"""Ponto de entrada principal para a aplica√ß√£o de descri√ß√£o de animais.

Este script utiliza 'argparse' para criar uma interface de linha de comando (CLI)
amig√°vel, permitindo que o usu√°rio pe√ßa a descri√ß√£o de um animal espec√≠fico.

Como usar:
$ python main.py --animal "Le√£o"
"""

import argparse

from chains.chain_animal_description import pipeline_completa


def main():
    """Fun√ß√£o principal que configura o CLI, executa a pipeline e imprime o resultado."""
    # 1. Configura√ß√£o do Parser de Argumentos
    # Isso cria a ajuda e os argumentos que seu script aceita no terminal.
    parser = argparse.ArgumentParser(
        description="Gera uma descri√ß√£o detalhada sobre um animal usando LangChain."
    )
    parser.add_argument(
        "--animal",
        type=str,
        required=True,
        help="O nome do animal para o qual a descri√ß√£o ser√° gerada.",
    )
    args = parser.parse_args()

    # 2. Execu√ß√£o da Pipeline
    # Tenta executar a pipeline importada e trata poss√≠veis erros.
    try:
        print(f"üêæ Gerando descri√ß√£o para: {args.animal}...")

        # O dicion√°rio {"animal": args.animal} corresponde √† entrada que a pipeline espera.
        resultado_final = pipeline_completa.invoke({"animal": args.animal})

        print("\n‚úÖ Descri√ß√£o gerada com sucesso!")
        print(resultado_final)

    except Exception as e:
        print(f"\n‚ùå Ocorreu um erro ao executar a pipeline: {e}")


# 3. Ponto de Entrada Padr√£o do Python
# Este bloco garante que a fun√ß√£o main() s√≥ ser√° executada quando
# o script for chamado diretamente (ex: python main.py).
if __name__ == "__main__":
    main()
